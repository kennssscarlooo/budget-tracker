{"ast":null,"code":"var _jsxFileName = \"/Users/KennsCarlo/Desktop/budget-tracker-v1/src/components/Form.js\";\nimport React, { useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\n\nconst AddButton = props => {\n  // console.log({ amount, type, description });\n  props.setAddForm();\n};\n\nfunction Form(props) {\n  const [amount, setAmount] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(\"Income\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"transaction-form\",\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"5px 0px\"\n    },\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, \"Amount\")), /*#__PURE__*/React.createElement(NumberFormat, {\n    className: \"input\",\n    value: amount,\n    displayType: \"input\",\n    type: \"text\",\n    thousandSeparator: true,\n    thousandsGroupStyle: \"thousand\",\n    prefix: \"â‚± \",\n    placeholder: \"Enter amount here...\",\n    onChange: e => setAmount(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"5px 0px\"\n    },\n    id: \"for-description\",\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: description,\n    className: \"form-control no-bg\",\n    id: \"description\",\n    placeholder: \"Foods, rent, transportation, etc...\",\n    onChange: e => setDescription(e.target.value),\n    autoComplete: \"off\",\n    autoCapitalize: \"words\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Select the type of transaction:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"transaction\",\n    id: \"income\",\n    value: \"Income\",\n    checked: type === \"Income\",\n    onChange: e => setType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Income\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"transaction\",\n    id: \"expense\",\n    value: \"Expense\",\n    checked: type === \"Expense\",\n    onChange: e => setType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Expense\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"transaction\",\n    id: \"saving\",\n    value: \"Saving\",\n    checked: type === \"Saving\",\n    onChange: e => setType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    htmlFor: \"saving\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Saving\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddButton, {\n    className: \"button\",\n    onClick: AddButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Add\"))));\n}\n\nexport { Form, AddButton };","map":{"version":3,"sources":["/Users/KennsCarlo/Desktop/budget-tracker-v1/src/components/Form.js"],"names":["React","useState","NumberFormat","AddButton","props","setAddForm","Form","amount","setAmount","description","setDescription","type","setType","padding","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport NumberFormat from \"react-number-format\";\n\nconst AddButton = (props) => {\n  // console.log({ amount, type, description });\n  props.setAddForm();\n};\nfunction Form(props) {\n  const [amount, setAmount] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [type, setType] = useState(\"Income\");\n\n  return (\n    <div id=\"transaction-form\" className=\"form-container\">\n      <div className=\"form\">\n        <div style={{ padding: \"5px 0px\" }} className=\"form-group\">\n          <label htmlFor=\"amount\">Amount</label>\n        </div>\n        <NumberFormat\n          className=\"input\"\n          value={amount}\n          displayType=\"input\"\n          type=\"text\"\n          thousandSeparator={true}\n          thousandsGroupStyle=\"thousand\"\n          prefix={\"â‚± \"}\n          placeholder=\"Enter amount here...\"\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        <div\n          style={{ padding: \"5px 0px\" }}\n          id=\"for-description\"\n          className=\"form-group\"\n        >\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            value={description}\n            className=\"form-control no-bg\"\n            id=\"description\"\n            placeholder=\"Foods, rent, transportation, etc...\"\n            onChange={(e) => setDescription(e.target.value)}\n            autoComplete=\"off\"\n            autoCapitalize=\"words\"\n            required\n          />\n        </div>\n        <p>Select the type of transaction:</p>\n        <div className=\"form-check form-check-inline\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            name=\"transaction\"\n            id=\"income\"\n            value=\"Income\"\n            checked={type === \"Income\"}\n            onChange={(e) => setType(e.target.value)}\n          />\n          <label className=\"form-check-label\" htmlFor=\"income\">\n            Income\n          </label>\n        </div>\n        <div className=\"form-check form-check-inline\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            name=\"transaction\"\n            id=\"expense\"\n            value=\"Expense\"\n            checked={type === \"Expense\"}\n            onChange={(e) => setType(e.target.value)}\n          />\n          <label className=\"form-check-label\" htmlFor=\"expense\">\n            Expense\n          </label>\n        </div>\n        <div className=\"form-check form-check-inline\">\n          <input\n            className=\"form-check-input\"\n            type=\"radio\"\n            name=\"transaction\"\n            id=\"saving\"\n            value=\"Saving\"\n            checked={type === \"Saving\"}\n            onChange={(e) => setType(e.target.value)}\n          />\n          <label className=\"form-check-label\" htmlFor=\"saving\">\n            Saving\n          </label>\n        </div>\n\n        <div className=\"buttons center\">\n          <AddButton className=\"button\" onClick={AddButton}>\n            Add\n          </AddButton>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Form, AddButton };\n"]},"metadata":{},"sourceType":"module"}