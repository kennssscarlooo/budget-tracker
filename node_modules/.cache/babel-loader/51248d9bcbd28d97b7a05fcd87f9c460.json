{"ast":null,"code":"/*!\n * Chart.js v3.6.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as toPadding, C as each, D as getMaximumSize, E as _getParentNode, F as readUsedSize, G as throttled, I as supportsEventListenerOptions, J as _isDomSupported, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as clipArea, W as renderText, X as unclipArea, Y as toFont, Z as _toLeftRightCenter, $ as _alignStartEnd, a0 as overrides, a1 as merge, a2 as _capitalize, a3 as descriptors, a4 as isFunction, a5 as _attachContext, a6 as _createResolver, a7 as _descriptors, a8 as mergeIf, a9 as uid, aa as debounce, ab as retinaScale, ac as clearCanvas, ad as setsEqual, ae as _elementsEqual, af as getAngleFromPoint, ag as _readValueToProps, ah as _updateBezierControlPoints, ai as _computeSegments, aj as _boundSegments, ak as _steppedInterpolation, al as _bezierInterpolation, am as _pointInLine, an as _steppedLineTo, ao as _bezierCurveTo, ap as drawPoint, aq as addRoundedRectPath, ar as toTRBL, as as toTRBLCorners, at as _boundSegment, au as _normalizeAngle, av as getRtlAdapter, aw as overrideTextDirection, ax as _textX, ay as restoreTextDirection, az as noop, aA as distanceBetweenPoints, aB as _setMinAndMaxByKey, aC as niceNum, aD as almostWhole, aE as almostEquals, aF as _decimalPlaces, aG as _longestText, aH as _filterBetween, aI as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      }\n    }\n  }\n});\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\n\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.configure();\n    this._cachedDataOpts = {};\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n\n      if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n        stacks.push(item.stack);\n      }\n\n      if (item.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n\n          if (controller !== this) {\n            controller.configure();\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: name => name !== 'spacing',\n  _indexable: name => name !== 'spacing'\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {\n      start,\n      count\n    } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\n\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {\n      iScale,\n      _parsed\n    } = meta;\n    const axis = iScale.axis;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nfunction scaleRangesChanged(meta) {\n  const {\n    xScale,\n    yScale,\n    _scaleRanges\n  } = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n\n  const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            const {\n              labels: {\n                pointStyle\n              }\n            } = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n\n      },\n\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {}\n\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\n\nclass ScatterController extends LineController {}\n\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n\n  formats() {\n    return abstract();\n  }\n\n  parse(value, format) {\n    return abstract();\n  }\n\n  format(timestamp, format) {\n    return abstract();\n  }\n\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n\n  diff(a, b, unit) {\n    return abstract();\n  }\n\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n\n}\n\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\n\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return getRelativePosition$1(e, chart);\n}\n\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({\n      index,\n      data\n    } = metasets[i]);\n\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n  updateConfig(config) {}\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    for (const entry of entries) {\n      for (const node of entry.addedNodes) {\n        if (node === canvas || node.contains(canvas)) {\n          return listener();\n        }\n      }\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    for (const entry of entries) {\n      for (const node of entry.removedNodes) {\n        if (node === canvas || node.contains(canvas)) {\n          return listener();\n        }\n      }\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, args => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {\n      notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n\n    const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n\n    return '';\n  }\n\n};\n\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n\n  return delta;\n}\n\nvar Ticks = {\n  formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: name => name !== 'backdropPadding'\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        grid\n      }\n    } = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._each('register', args);\n  }\n\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._each('unregister', args);\n  }\n\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._each('register', args, this.controllers);\n  }\n\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this._each('register', args, this.plugins);\n  }\n\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n\n  return plugins;\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"3.6.0\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n\n    this.render();\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({\n        datasetIndex: i\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n\n      this._resize(width, height);\n\n      this._resizeBeforeDraw = null;\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref2 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref2;\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n\n    this._lastEvent = null;\n\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n}\n\nconst invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: function () {\n      registry.add(...arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: function () {\n      registry.remove(...arguments);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n\n  ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {\n    x,\n    y,\n    startAngle,\n    pixelMargin,\n    fullCircles\n  } = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\n\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {\n    options\n  } = element;\n  const inner = options.borderAlign === 'inner';\n\n  if (!options.borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\n\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust;\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    let radiusOffset = 0;\n\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n\n}\n\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: name => name !== 'borderDash' && name !== 'fill'\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (meta.type !== 'line') {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n  let target = null;\n  let horizontal;\n\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n\n  return null;\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref3 => {\n    let {\n      start,\n      end\n    } = _ref3;\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nfunction getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return createBoundaryLine(boundary, line);\n}\n\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nfunction _fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n\n    _fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n\n    ctx.restore();\n    ctx.save();\n\n    _clip(ctx, target, area.bottom);\n  }\n\n  _fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n\n  ctx.restore();\n}\n\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nvar plugin_filler = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      color: fontColor,\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretPadding;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretPadding;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this._chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n\n    const positionChanged = this._positionChanged(active, e);\n\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        _chart: chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n\n        return '';\n      },\n\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n\n        let label = tooltipItem.dataset.label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        const value = tooltipItem.formattedValue;\n\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n\n        return label;\n      },\n\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: plugin_filler,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string' ? labels.push(raw) - 1 : isNaN(raw) ? null : index;\n\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n\n    return value;\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref5) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref5;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = 1;\n\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\n\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n  for (let i = 0; i < valueCount; i++) {\n    const extra = i === 0 ? tickBackdropHeight / 2 : 0;\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = this.height - this.paddingTop - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor((maxLeft + maxRight) / 2 + this.left);\n    this.yCenter = Math.floor((maxTop + maxBottom) / 2 + this.top + this.paddingTop);\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid\n    } = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n\n    callback(label) {\n      return label;\n    },\n\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"sources":["/Users/KennsCarlo/Desktop/My Projects/budget-tracker-v1/node_modules/chart.js/dist/chart.esm.js"],"names":["r","requestAnimFrame","a","resolve","e","effects","c","color","d","defaults","i","isObject","b","isArray","v","valueOrDefault","u","unlistenArrayEvents","l","listenArrayEvents","f","resolveObjectKey","g","isNumberFinite","h","createContext","j","defined","s","sign","k","isNullOrUndef","_","_arrayUnique","t","toRadians","m","toPercentage","n","toDimension","T","TAU","o","formatNumber","p","_angleBetween","H","HALF_PI","P","PI","q","isNumber","w","_limitValue","x","_lookupByKey","y","getRelativePosition$1","z","_isPointInArea","A","_rlookupByKey","B","toPadding","C","each","D","getMaximumSize","E","_getParentNode","F","readUsedSize","G","throttled","I","supportsEventListenerOptions","J","_isDomSupported","K","log10","L","_factorize","M","finiteOrDefault","N","callback","O","_addGrace","Q","toDegrees","R","_measureText","S","_int16Range","U","_alignPixel","V","clipArea","W","renderText","X","unclipArea","Y","toFont","Z","_toLeftRightCenter","$","_alignStartEnd","a0","overrides","a1","merge","a2","_capitalize","a3","descriptors","a4","isFunction","a5","_attachContext","a6","_createResolver","a7","_descriptors","a8","mergeIf","a9","uid","aa","debounce","ab","retinaScale","ac","clearCanvas","ad","setsEqual","ae","_elementsEqual","af","getAngleFromPoint","ag","_readValueToProps","ah","_updateBezierControlPoints","ai","_computeSegments","aj","_boundSegments","ak","_steppedInterpolation","al","_bezierInterpolation","am","_pointInLine","an","_steppedLineTo","ao","_bezierCurveTo","ap","drawPoint","aq","addRoundedRectPath","ar","toTRBL","as","toTRBLCorners","at","_boundSegment","au","_normalizeAngle","av","getRtlAdapter","aw","overrideTextDirection","ax","_textX","ay","restoreTextDirection","az","noop","aA","distanceBetweenPoints","aB","_setMinAndMaxByKey","aC","niceNum","aD","almostWhole","aE","almostEquals","aF","_decimalPlaces","aG","_longestText","aH","_filterBetween","aI","_lookup","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","call","window","_update","Date","now","remaining","running","items","length","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","numbers","colors","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","properties","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","prototype","getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","val","isNaN","indexOf","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","getPixelForDecimal","vPixel","skip","plugins","tooltip","title","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","pointCount","lo","hi","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","ScatterController","interaction","controllers","__proto__","abstract","Error","DateAdapter","formats","format","timestamp","amount","unit","diff","startOf","weekday","endOf","override","members","adapters","_date","getRelativePosition","evaluateAllVisibleItems","handler","getSortedVisibleDatasetMetas","jlen","binarySearch","metaset","intersect","lookupMethod","_reversePixels","el","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","_minPadding","evaluationFunc","inRange","getNearestItems","distanceMetric","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","eventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","createAttachObserver","observer","MutationObserver","entries","addedNodes","contains","observe","document","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","borderDash","borderDashOffset","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","result","ceil","majorStart","majorEnd","len","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","getTitleHeight","fallback","font","lines","lineHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","subResolver","descriptorDefaults","resolverCache","hasFunction","isScriptable","isIndexable","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","existingEvents","newEvents","events","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","lastEvent","onHover","invalidatePlugins","enumerable","defineProperties","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","setStyle","lineCap","borderCapStyle","borderJoinStyle","previous","getLineMethod","stepped","tension","cubicInterpolationMode","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","capBezierPoints","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","getLineByIndex","parseFillOption","fillOption","decodeFill","parseFloat","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","getTarget","resolveTarget","sources","propagate","visited","clipY","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","lineLoop","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","fillText","strikethrough","textDirection","textWidth","setWidth","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","isFinite","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","buildPointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","numberOrZero","param","createPointLabelContext","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","_adapters"],"mappings":"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","sourcesContent":["/*!\n * Chart.js v3.6.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as toPadding, C as each, D as getMaximumSize, E as _getParentNode, F as readUsedSize, G as throttled, I as supportsEventListenerOptions, J as _isDomSupported, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as clipArea, W as renderText, X as unclipArea, Y as toFont, Z as _toLeftRightCenter, $ as _alignStartEnd, a0 as overrides, a1 as merge, a2 as _capitalize, a3 as descriptors, a4 as isFunction, a5 as _attachContext, a6 as _createResolver, a7 as _descriptors, a8 as mergeIf, a9 as uid, aa as debounce, ab as retinaScale, ac as clearCanvas, ad as setsEqual, ae as _elementsEqual, af as getAngleFromPoint, ag as _readValueToProps, ah as _updateBezierControlPoints, ai as _computeSegments, aj as _boundSegments, ak as _steppedInterpolation, al as _bezierInterpolation, am as _pointInLine, an as _steppedLineTo, ao as _bezierCurveTo, ap as drawPoint, aq as addRoundedRectPath, ar as toTRBL, as as toTRBLCorners, at as _boundSegment, au as _normalizeAngle, av as getRtlAdapter, aw as overrideTextDirection, ax as _textX, ay as restoreTextDirection, az as noop, aA as distanceBetweenPoints, aB as _setMinAndMaxByKey, aC as niceNum, aD as almostWhole, aE as almostEquals, aF as _decimalPlaces, aG as _longestText, aH as _filterBetween, aI as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.configure();\n    this._cachedDataOpts = {};\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== this) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    for (const entry of entries) {\n      for (const node of entry.addedNodes) {\n        if (node === canvas || node.contains(canvas)) {\n          return listener();\n        }\n      }\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    for (const entry of entries) {\n      for (const node of entry.removedNodes) {\n        if (node === canvas || node.contains(canvas)) {\n          return listener();\n        }\n      }\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.6.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n    this.render();\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay) {\n    const {_active: lastActive = [], options} = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n    this._lastEvent = null;\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretPadding;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this._chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = this._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = (this.height - this.paddingTop) - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor(((maxLeft + maxRight) / 2) + this.left);\n    this.yCenter = Math.floor(((maxTop + maxBottom) / 2) + this.top + this.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"]},"metadata":{},"sourceType":"module"}