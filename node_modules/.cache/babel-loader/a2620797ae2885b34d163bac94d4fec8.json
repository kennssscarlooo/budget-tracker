{"ast":null,"code":"var _jsxFileName = \"/Users/KennsCarlo/Desktop/budget-tracker-v1/src/components/Transaction/Form/Form.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport { TextField, Grid, Button, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BudgetTrackerContext } from \"../../../context/context.js\";\nimport { incomeCategories, expenseCategories, savingCategories } from \"../../../constants/categories\";\nimport useStyles from \"./FormStyle.js\";\nimport formatDate from \"../../../utility/formatDate\";\nimport Notification from \"../../Notification/Notification.jsx\";\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date())\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const {\n    addTransaction\n  } = useContext(BudgetTrackerContext);\n  const [open, setOpen] = useState(false);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) && !formData.category) return;\n\n    if (incomeCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({ ...formData,\n        type: \"Income\"\n      });\n    } else if (savingCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({ ...formData,\n        type: \"Saving\"\n      });\n    } else if (expenseCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({ ...formData,\n        type: \"Expense\"\n      });\n    }\n\n    addTransaction({ ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    });\n    setFormData(initialState);\n    setOpen(true);\n  };\n\n  const selectedCategories = formData.type === \"Income\" ? incomeCategories : formData.type === \"Expense\" ? expenseCategories : savingCategories;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Notification, {\n    open: open,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.type,\n    onChange: e => setFormData({ ...formData,\n      type: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Saving\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Saving\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Expense\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.category,\n    onChange: e => setFormData({ ...formData,\n      category: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, selectedCategories.map(c => /*#__PURE__*/React.createElement(MenuItem, {\n    key: c.type,\n    value: c.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, c.type))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"number\",\n    label: \"Amount\",\n    value: formData.amount,\n    onChange: e => setFormData({ ...formData,\n      amount: e.target.value\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Date\",\n    type: \"date\",\n    value: formData.date,\n    onChange: e => setFormData({ ...formData,\n      date: formatDate(e.target.value)\n    }),\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    onClick: createTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/KennsCarlo/Desktop/budget-tracker-v1/src/components/Transaction/Form/Form.jsx"],"names":["React","useState","useContext","TextField","Grid","Button","FormControl","InputLabel","Select","MenuItem","v4","uuidv4","BudgetTrackerContext","incomeCategories","expenseCategories","savingCategories","useStyles","formatDate","Notification","initialState","amount","category","type","date","Date","Form","classes","formData","setFormData","addTransaction","open","setOpen","createTransaction","Number","isNaN","map","iC","includes","id","selectedCategories","e","target","value","c","center","button"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport {\n  TextField,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BudgetTrackerContext } from \"../../../context/context.js\";\nimport {\n  incomeCategories,\n  expenseCategories,\n  savingCategories,\n} from \"../../../constants/categories\";\n\nimport useStyles from \"./FormStyle.js\";\nimport formatDate from \"../../../utility/formatDate\";\nimport Notification from \"../../Notification/Notification.jsx\";\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(BudgetTrackerContext);\n  const [open, setOpen] = useState(false);\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) && !formData.category) return;\n\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({ ...formData, type: \"Income\" });\n    } else if (\n      savingCategories.map((iC) => iC.type).includes(formData.category)\n    ) {\n      setFormData({ ...formData, type: \"Saving\" });\n    } else if (\n      expenseCategories.map((iC) => iC.type).includes(formData.category)\n    ) {\n      setFormData({ ...formData, type: \"Expense\" });\n    }\n\n    addTransaction({\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4(),\n    });\n    setFormData(initialState);\n    setOpen(true);\n  };\n  const selectedCategories =\n    formData.type === \"Income\"\n      ? incomeCategories\n      : formData.type === \"Expense\"\n      ? expenseCategories\n      : savingCategories;\n  return (\n    <Grid container spacing={2}>\n      <Notification open={open} setOpen={setOpen}  />\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Saving\">Saving</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n          fullWidth\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          label=\"Date\"\n          type=\"date\"\n          value={formData.date}\n          onChange={(e) =>\n            setFormData({ ...formData, date: formatDate(e.target.value) })\n          }\n          fullWidth\n        />\n      </Grid>\n      <div className={classes.center}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          onClick={createTransaction}\n        >\n          Add\n        </Button>\n      </div>\n    </Grid>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}