{"ast":null,"code":"var _jsxFileName = \"/Users/KennsCarlo/Desktop/budget-tracker-v1/src/components/Recent/Recent.jsx\";\nimport React, { useContext, useState } from \"react\";\nimport { List as MUIList, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, TextField, InputAdornment, IconButton, Slide } from \"@material-ui/core\";\nimport formatAmount from \"../../utility/formatAmount\";\nimport { ClearRounded, MoneyOffRounded } from \"@material-ui/icons\";\nimport AttachMoneyRoundedIcon from \"@material-ui/icons/AttachMoneyRounded\";\nimport AccountBalanceRoundedIcon from \"@material-ui/icons/AccountBalanceRounded\";\nimport Notification from \"../Notification/Notification.jsx\";\nimport { BudgetTrackerContext } from \"../../context/context\";\nimport useStyles from \"./RecentStyle.js\";\n\nconst List = props => {\n  console.log(props);\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const {\n    transactions,\n    deleteTransaction\n  } = useContext(BudgetTrackerContext);\n  return /*#__PURE__*/React.createElement(MUIList, {\n    dense: false,\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Notification, {\n    open: open,\n    setOpen: setOpen,\n    type: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    size: \"small\",\n    type: \"text\",\n    placeholder: \"Search transaction...\",\n    onChange: e => setSearchTerm(e.target.value),\n    value: props.term,\n    className: classes.searchBar,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(SearchRoundedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      })),\n      endAdornment: searchTerm && /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"clear icon\",\n        onClick: () => setSearchTerm(\"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ClearRoundedIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }))\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })), transactions.map(transaction => /*#__PURE__*/React.createElement(Slide, {\n    direction: \"down\",\n    in: true,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    key: transaction.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: transaction.type === \"Income\" ? classes.avatarIncome : transaction.type === \"Expense\" ? classes.avatarExpense : classes.avatarSaving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, transaction.type === \"Expense\" ? /*#__PURE__*/React.createElement(MoneyOffRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }) : transaction.type === \"Income\" ? /*#__PURE__*/React.createElement(AttachMoneyRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(AccountBalanceRoundedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: transaction.category,\n    secondary: `${formatAmount(transaction.amount)} - ${transaction.date}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemSecondaryAction, {\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    \"aria-label\": \"delete\",\n    onClick: () => deleteTransaction(transaction.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ClearRounded, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default List;","map":{"version":3,"sources":["/Users/KennsCarlo/Desktop/budget-tracker-v1/src/components/Recent/Recent.jsx"],"names":["React","useContext","useState","List","MUIList","ListItem","ListItemAvatar","Avatar","ListItemText","ListItemSecondaryAction","TextField","InputAdornment","IconButton","Slide","formatAmount","ClearRounded","MoneyOffRounded","AttachMoneyRoundedIcon","AccountBalanceRoundedIcon","Notification","BudgetTrackerContext","useStyles","props","console","log","classes","open","setOpen","transactions","deleteTransaction","list","search","e","setSearchTerm","target","value","term","searchBar","startAdornment","endAdornment","searchTerm","map","transaction","id","type","avatarIncome","avatarExpense","avatarSaving","category","amount","date"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport {\n  List as MUIList,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Slide,\n} from \"@material-ui/core\";\nimport formatAmount from \"../../utility/formatAmount\";\nimport { ClearRounded, MoneyOffRounded } from \"@material-ui/icons\";\nimport AttachMoneyRoundedIcon from \"@material-ui/icons/AttachMoneyRounded\";\nimport AccountBalanceRoundedIcon from \"@material-ui/icons/AccountBalanceRounded\";\nimport Notification from \"../Notification/Notification.jsx\";\nimport { BudgetTrackerContext } from \"../../context/context\";\nimport useStyles from \"./RecentStyle.js\";\n\nconst List = (props) => {\n  console.log(props);\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const { transactions, deleteTransaction } = useContext(BudgetTrackerContext);\n\n  return (\n    <MUIList dense={false} className={classes.list}>\n      <Notification open={open} setOpen={setOpen} type=\"delete\" />\n      <div className={classes.search}>\n        <TextField\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"text\"\n          placeholder=\"Search transaction...\"\n          onChange={(e) => setSearchTerm(e.target.value)}\n          value={props.term}\n          className={classes.searchBar}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchRoundedIcon />\n              </InputAdornment>\n            ),\n            endAdornment: searchTerm && (\n              <IconButton\n                aria-label=\"clear icon\"\n                onClick={() => setSearchTerm(\"\")}\n              >\n                <ClearRoundedIcon />\n              </IconButton>\n            ),\n          }}\n        />\n      </div>\n      {transactions.map((transaction) => (\n        <Slide\n          direction=\"down\"\n          in\n          mountOnEnter\n          unmountOnExit\n          key={transaction.id}\n        >\n          <ListItem>\n            <ListItemAvatar>\n              <Avatar\n                className={\n                  transaction.type === \"Income\"\n                    ? classes.avatarIncome\n                    : transaction.type === \"Expense\"\n                    ? classes.avatarExpense\n                    : classes.avatarSaving\n                }\n              >\n                {transaction.type === \"Expense\" ? (\n                  <MoneyOffRounded />\n                ) : transaction.type === \"Income\" ? (\n                  <AttachMoneyRoundedIcon />\n                ) : (\n                  <AccountBalanceRoundedIcon />\n                )}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={transaction.category}\n              secondary={`${formatAmount(transaction.amount)} - ${\n                transaction.date\n              }`}\n            />\n            <ListItemSecondaryAction onClick={() => setOpen(true)}>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={() => deleteTransaction(transaction.id)}\n              >\n                <ClearRounded />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Slide>\n      ))}\n    </MUIList>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}