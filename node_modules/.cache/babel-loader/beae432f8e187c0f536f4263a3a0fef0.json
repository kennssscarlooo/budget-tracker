{"ast":null,"code":"import { useContext } from \"react\";\nimport { BudgetTrackerContext } from \"./context/context\";\nimport { incomeCategories, expenseCategories, savingCategories, resetCategories } from \"./constants/categories\";\n\nconst useTransactions = title => {\n  resetCategories();\n  const {\n    transactions,\n    balance\n  } = useContext(BudgetTrackerContext);\n  const allTransactions = transactions.filter(transaction => transaction.type === title);\n  const total = allTransactions.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const categories = title === \"Income\" ? incomeCategories : title === \"Expense\" ? expenseCategories : savingCategories;\n  allTransactions.forEach(transaction => {\n    const category = categories.find(category => category.type === transaction.category);\n    if (category) category.amount += transaction.amount;\n  });\n  const allSaving = transactions.filter(transaction => transaction.type === \"Saving\");\n  const totalSaving = allSaving.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const allExpense = transactions.filter(transaction => transaction.type === \"Expense\");\n  const totalExpense = allExpense.reduce((acc, currVal) => acc += currVal.amount, 0);\n  const filteredCategories = categories.filter(c => c.amount > 0);\n  const chartOverviewData = {\n    datasets: [{\n      data: [balance, totalExpense, totalSaving],\n      backgroundColor: [\"rgba(75, 192, 192, 0.5)\", \"rgba(255, 99, 132, 0.5)\", \"rgba(54, 162, 235, 0.5)\"]\n    }],\n    labels: [\"Balance\", \"Expense\", \"Saving\"]\n  };\n  const chartData = {\n    datasets: [{\n      data: filteredCategories.map(c => c.amount),\n      backgroundColor: filteredCategories.map(c => c.color)\n    }],\n    labels: filteredCategories.map(c => c.type)\n  };\n  return {\n    filteredCategories,\n    total,\n    chartData,\n    chartOverviewData\n  };\n};\n\nexport default useTransactions;","map":{"version":3,"sources":["/Users/KennsCarlo/Desktop/budget-tracker-v1/src/useTransactions.js"],"names":["useContext","BudgetTrackerContext","incomeCategories","expenseCategories","savingCategories","resetCategories","useTransactions","title","transactions","balance","allTransactions","filter","transaction","type","total","reduce","acc","currVal","amount","categories","forEach","category","find","allSaving","totalSaving","allExpense","totalExpense","filteredCategories","c","chartOverviewData","datasets","data","backgroundColor","labels","chartData","map","color"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,oBAAT,QAAqC,mBAArC;AAEA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,gBAHF,EAIEC,eAJF,QAKO,wBALP;;AAOA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCF,EAAAA,eAAe;AACf,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4BT,UAAU,CAACC,oBAAD,CAA5C;AACA,QAAMS,eAAe,GAAGF,YAAY,CAACG,MAAb,CACrBC,WAAD,IAAiBA,WAAW,CAACC,IAAZ,KAAqBN,KADhB,CAAxB;AAGA,QAAMO,KAAK,GAAGJ,eAAe,CAACK,MAAhB,CACZ,CAACC,GAAD,EAAMC,OAAN,KAAmBD,GAAG,IAAIC,OAAO,CAACC,MADtB,EAEZ,CAFY,CAAd;AAIA,QAAMC,UAAU,GACdZ,KAAK,KAAK,QAAV,GACIL,gBADJ,GAEIK,KAAK,KAAK,SAAV,GACAJ,iBADA,GAEAC,gBALN;AAMAM,EAAAA,eAAe,CAACU,OAAhB,CAAyBR,WAAD,IAAiB;AACvC,UAAMS,QAAQ,GAAGF,UAAU,CAACG,IAAX,CACdD,QAAD,IAAcA,QAAQ,CAACR,IAAT,KAAkBD,WAAW,CAACS,QAD7B,CAAjB;AAGA,QAAIA,QAAJ,EAAcA,QAAQ,CAACH,MAAT,IAAmBN,WAAW,CAACM,MAA/B;AACf,GALD;AAMA,QAAMK,SAAS,GAAGf,YAAY,CAACG,MAAb,CACfC,WAAD,IAAiBA,WAAW,CAACC,IAAZ,KAAqB,QADtB,CAAlB;AAGA,QAAMW,WAAW,GAAGD,SAAS,CAACR,MAAV,CAClB,CAACC,GAAD,EAAMC,OAAN,KAAmBD,GAAG,IAAIC,OAAO,CAACC,MADhB,EAElB,CAFkB,CAApB;AAIA,QAAMO,UAAU,GAAGjB,YAAY,CAACG,MAAb,CAChBC,WAAD,IAAiBA,WAAW,CAACC,IAAZ,KAAqB,SADrB,CAAnB;AAGA,QAAMa,YAAY,GAAGD,UAAU,CAACV,MAAX,CACnB,CAACC,GAAD,EAAMC,OAAN,KAAmBD,GAAG,IAAIC,OAAO,CAACC,MADf,EAEnB,CAFmB,CAArB;AAKA,QAAMS,kBAAkB,GAAGR,UAAU,CAACR,MAAX,CAAmBiB,CAAD,IAAOA,CAAC,CAACV,MAAF,GAAW,CAApC,CAA3B;AAEA,QAAMW,iBAAiB,GAAG;AACxBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAE,CAACtB,OAAD,EAAUiB,YAAV,EAAwBF,WAAxB,CADR;AAEEQ,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe;AAFnB,KADQ,CADc;AAWxBC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB;AAXgB,GAA1B;AAaA,QAAMC,SAAS,GAAG;AAChBJ,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,IAAI,EAAEJ,kBAAkB,CAACQ,GAAnB,CAAwBP,CAAD,IAAOA,CAAC,CAACV,MAAhC,CADR;AAEEc,MAAAA,eAAe,EAAEL,kBAAkB,CAACQ,GAAnB,CAAwBP,CAAD,IAAOA,CAAC,CAACQ,KAAhC;AAFnB,KADQ,CADM;AAOhBH,IAAAA,MAAM,EAAEN,kBAAkB,CAACQ,GAAnB,CAAwBP,CAAD,IAAOA,CAAC,CAACf,IAAhC;AAPQ,GAAlB;AAUA,SAAO;AAAEc,IAAAA,kBAAF;AAAsBb,IAAAA,KAAtB;AAA6BoB,IAAAA,SAA7B;AAAwCL,IAAAA;AAAxC,GAAP;AACD,CA/DD;;AAiEA,eAAevB,eAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { BudgetTrackerContext } from \"./context/context\";\r\n\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n  savingCategories,\r\n  resetCategories,\r\n} from \"./constants/categories\";\r\n\r\nconst useTransactions = (title) => {\r\n  resetCategories();\r\n  const { transactions, balance } = useContext(BudgetTrackerContext);\r\n  const allTransactions = transactions.filter(\r\n    (transaction) => transaction.type === title\r\n  );\r\n  const total = allTransactions.reduce(\r\n    (acc, currVal) => (acc += currVal.amount),\r\n    0\r\n  );\r\n  const categories =\r\n    title === \"Income\"\r\n      ? incomeCategories\r\n      : title === \"Expense\"\r\n      ? expenseCategories\r\n      : savingCategories;\r\n  allTransactions.forEach((transaction) => {\r\n    const category = categories.find(\r\n      (category) => category.type === transaction.category\r\n    );\r\n    if (category) category.amount += transaction.amount;\r\n  });\r\n  const allSaving = transactions.filter(\r\n    (transaction) => transaction.type === \"Saving\"\r\n  );\r\n  const totalSaving = allSaving.reduce(\r\n    (acc, currVal) => (acc += currVal.amount),\r\n    0\r\n  );\r\n  const allExpense = transactions.filter(\r\n    (transaction) => transaction.type === \"Expense\"\r\n  );\r\n  const totalExpense = allExpense.reduce(\r\n    (acc, currVal) => (acc += currVal.amount),\r\n    0\r\n  );\r\n\r\n  const filteredCategories = categories.filter((c) => c.amount > 0);\r\n\r\n  const chartOverviewData = {\r\n    datasets: [\r\n      {\r\n        data: [balance, totalExpense, totalSaving],\r\n        backgroundColor: [\r\n          \"rgba(75, 192, 192, 0.5)\",\r\n          \"rgba(255, 99, 132, 0.5)\",\r\n          \"rgba(54, 162, 235, 0.5)\",\r\n        ],\r\n      },\r\n    ],\r\n    labels: [\"Balance\", \"Expense\", \"Saving\"],\r\n  };\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        data: filteredCategories.map((c) => c.amount),\r\n        backgroundColor: filteredCategories.map((c) => c.color),\r\n      },\r\n    ],\r\n    labels: filteredCategories.map((c) => c.type),\r\n  };\r\n\r\n  return { filteredCategories, total, chartData, chartOverviewData,  };\r\n};\r\n\r\nexport default useTransactions;\r\n"]},"metadata":{},"sourceType":"module"}