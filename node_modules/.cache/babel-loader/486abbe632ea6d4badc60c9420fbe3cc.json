{"ast":null,"code":"var _jsxFileName = \"/Users/KennsCarlo/Desktop/budget-tracker-v1/src/components/Transaction/Form/Form.jsx\";\nimport React, { useState } from \"react\";\nimport { TextField, Grid, Button, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport NumberFormat from \"react-number-format\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BudgetTrackerContext } from \"../../context/context\";\nimport useStyles from \"./FormStyle.js\";\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"\",\n  date: new Date()\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const {\n    addTransaction\n  } = useContext(BudgetTrackerContext);\n\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\")) return;\n\n    if (incomeCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({ ...formData,\n        type: \"Income\"\n      });\n    } else if (expenseCategories.map(iC => iC.type).includes(formData.category)) {\n      setFormData({ ...formData,\n        type: \"Expense\"\n      });\n    }\n\n    setOpen(true);\n    addTransaction({ ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4()\n    });\n    setFormData(initialState);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.type,\n    onChange: e => setFormData({ ...formData,\n      type: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Saving\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Saving\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Expense\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    value: formData.category,\n    onChange: e => setFormData({ ...formData,\n      category: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NumberFormat, {\n    className: classes.input,\n    value: formData.amount,\n    onChange: e => setFormData({ ...formData,\n      amount: e.target.value\n    }),\n    displayType: \"input\",\n    type: \"text\",\n    thousandSeparator: true,\n    thousandsGroupStyle: \"thousand\",\n    prefix: \"â‚± \",\n    placeholder: \"Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Date\",\n    type: \"date\",\n    value: formData.date,\n    onChange: e => setFormData({ ...formData,\n      date: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.center,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    onClick: createTransaction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Add\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/KennsCarlo/Desktop/budget-tracker-v1/src/components/Transaction/Form/Form.jsx"],"names":["React","useState","TextField","Grid","Button","FormControl","InputLabel","Select","MenuItem","NumberFormat","v4","uuidv4","BudgetTrackerContext","useStyles","initialState","amount","category","type","date","Date","Form","classes","formData","setFormData","addTransaction","useContext","createTransaction","Number","isNaN","includes","incomeCategories","map","iC","expenseCategories","setOpen","id","e","target","value","input","center","button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,SADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,MANF,EAOEC,QAPF,QAQO,mBARP;AASA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,oBAAT,QAAqC,uBAArC;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,IAAI,EAAE,IAAIC,IAAJ;AAJa,CAArB;;AAOA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAACa,YAAD,CAAxC;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAqBC,UAAU,CAACb,oBAAD,CAArC;;AACA,QAAMc,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACL,QAAQ,CAACP,MAAV,CAAnB,KAAyC,CAACO,QAAQ,CAACJ,IAAT,CAAcW,QAAd,CAAuB,GAAvB,CAA9C,EACE;;AAEF,QAAIC,gBAAgB,CAACC,GAAjB,CAAsBC,EAAD,IAAQA,EAAE,CAACf,IAAhC,EAAsCY,QAAtC,CAA+CP,QAAQ,CAACN,QAAxD,CAAJ,EAAuE;AACrEO,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeL,QAAAA,IAAI,EAAE;AAArB,OAAD,CAAX;AACD,KAFD,MAEO,IACLgB,iBAAiB,CAACF,GAAlB,CAAuBC,EAAD,IAAQA,EAAE,CAACf,IAAjC,EAAuCY,QAAvC,CAAgDP,QAAQ,CAACN,QAAzD,CADK,EAEL;AACAO,MAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeL,QAAAA,IAAI,EAAE;AAArB,OAAD,CAAX;AACD;;AAEDiB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAV,IAAAA,cAAc,CAAC,EACb,GAAGF,QADU;AAEbP,MAAAA,MAAM,EAAEY,MAAM,CAACL,QAAQ,CAACP,MAAV,CAFD;AAGboB,MAAAA,EAAE,EAAExB,MAAM;AAHG,KAAD,CAAd;AAKAY,IAAAA,WAAW,CAACT,YAAD,CAAX;AACD,GAnBD;;AAoBA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEQ,QAAQ,CAACL,IADlB;AAEE,IAAA,QAAQ,EAAGmB,CAAD,IAAOb,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeL,MAAAA,IAAI,EAAEmB,CAAC,CAACC,MAAF,CAASC;AAA9B,KAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CAFF,CADF,CADF,eAcE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEhB,QAAQ,CAACN,QADlB;AAEE,IAAA,QAAQ,EAAGoB,CAAD,IACRb,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeN,MAAAA,QAAQ,EAAEoB,CAAC,CAACC,MAAF,CAASC;AAAlC,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADF,CAdF,eA4BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAEjB,OAAO,CAACkB,KADrB;AAEE,IAAA,KAAK,EAAEjB,QAAQ,CAACP,MAFlB;AAGE,IAAA,QAAQ,EAAGqB,CAAD,IAAOb,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeP,MAAAA,MAAM,EAAEqB,CAAC,CAACC,MAAF,CAASC;AAAhC,KAAD,CAH9B;AAIE,IAAA,WAAW,EAAC,OAJd;AAKE,IAAA,IAAI,EAAC,MALP;AAME,IAAA,iBAAiB,EAAE,IANrB;AAOE,IAAA,mBAAmB,EAAC,UAPtB;AAQE,IAAA,MAAM,EAAE,IARV;AASE,IAAA,WAAW,EAAC,QATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BF,eAyCE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEhB,QAAQ,CAACJ,IAJlB;AAKE,IAAA,QAAQ,EAAGkB,CAAD,IAAOb,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeJ,MAAAA,IAAI,EAAEkB,CAAC,CAACC,MAAF,CAASC;AAA9B,KAAD,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzCF,eAkDE;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACmB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEnB,OAAO,CAACoB,MADrB;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAEf,iBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAlDF,CADF;AA8DD,CAtFD;;AAwFA,eAAeN,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TextField,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport NumberFormat from \"react-number-format\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BudgetTrackerContext } from \"../../context/context\";\n\nimport useStyles from \"./FormStyle.js\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"\",\n  date: new Date(),\n};\n\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(BudgetTrackerContext);\n  const createTransaction = () => {\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes(\"-\"))\n      return;\n\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\n      setFormData({ ...formData, type: \"Income\" });\n    } else if (\n      expenseCategories.map((iC) => iC.type).includes(formData.category)\n    ) {\n      setFormData({ ...formData, type: \"Expense\" });\n    }\n\n    setOpen(true);\n    addTransaction({\n      ...formData,\n      amount: Number(formData.amount),\n      id: uuidv4(),\n    });\n    setFormData(initialState);\n  };\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Saving\">Saving</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            <MenuItem></MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={6}>\n        <NumberFormat\n          className={classes.input}\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n          displayType=\"input\"\n          type=\"text\"\n          thousandSeparator={true}\n          thousandsGroupStyle=\"thousand\"\n          prefix={\"â‚± \"}\n          placeholder=\"Amount\"\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          fullWidth\n          label=\"Date\"\n          type=\"date\"\n          value={formData.date}\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\n        />\n      </Grid>\n      <div className={classes.center}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          onClick={createTransaction}\n        >\n          Add\n        </Button>\n      </div>\n    </Grid>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}